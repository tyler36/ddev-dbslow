#!/bin/bash

## #ddev-generated
## Description: Turn on query logging for diagnostic purposes.
## Usage: dbslow on|off|toggle|view|tail
## Example: "ddev dblog on" or "ddev dblog off" or "ddev dblog view" or "ddev dblog tail"
## DBTypes: mysql,mariadb
## ExecRaw: true

LOGFILE=/var/log/db-slow.log

function turn_on() {
mysql -u root -proot <<EOX
SET GLOBAL slow_query_log = 'ON';
SET GLOBAL slow_query_log_file = '$LOGFILE';
SET GLOBAL long_query_time = 1;
EOX

  echo_state
}

function turn_off() {
  mysql -u root -proot -e "SET global slow_query_log = 'OFF'"
  echo_state
  exit 0;
}

function get_state() {
  export DB_SLOW_LOGGING_STATUS=$(mysql -u root -proot -e "SHOW VARIABLES LIKE 'slow_query_log'\G;" | awk '/Value:/ { print $2 }')
  export DB_LOGFILE=$(mysql -u root -proot -e "SHOW VARIABLES LIKE 'slow_query_log_file'\G;" | awk '/Value:/ { print $2 }')
}

function echo_state() {
  get_state

  echo "'slow query' logging is: $DB_SLOW_LOGGING_STATUS"
}

function ctrl_c() {
  if [ "$DB_SLOW_LOGGING_STATUS" = "OFF" ]; then
    echo "Turning off slow logging..."
    turn_off
  fi

  exit 0
}

case "$@" in
  on)
    ;;
  off)
    turn_off
    exit 0
    ;;
  toggle)
    get_state

    # Check if state is ON and it's set our logfile.
    # It may be enabled by default, so it's not good enough to simple check state.
    if [ "$DB_SLOW_LOGGING_STATUS" = "ON" ] && [ "$DB_LOGFILE" = "$LOGFILE" ]; then
      turn_off
    fi
    ;;
  view)
    cat $LOGFILE
    exit 0
    ;;
  tail)
    # Grab the current state so if it's OFF, we'll turn it back off when tail exits.
    get_state

    trap ctrl_c INT
    ;;
  *)
    echo "Usage: " $(basename $0) " on|off|toggle|view|tail"
    exit 1
    ;;
esac

turn_on
if [ "$@" = "tail" ]; then
  tail -f $LOGFILE
fi
